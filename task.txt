min:
    * working interpreter for Stochastic Logic Programs, written in prolog
        either meta- or via AST (parse with definite clause grammar)
        invent syntax (or use the one from ex. sheets)
        + should be able to compute basic probabilities
        + sampling for a Stochastic Logic Program (generating bindings for the query var.)
max:
    * implement parameter learning
        parameter estimation in SLP (from cussens-parameter paper)
        for this: efficient inference
        + sampling
            algorithms: from cussens paper
    * something to aid programmer in meeting requirements
        all clauses add to < 1 für jede mögliche belegung

implementation:
berechnungen können alle in ffi sein (c/c++/rust), core logic in prolog
    ffi: https://github.com/k3ut0i/swipl-ffi-examples
