overview
---
* v1.pl - naive implementation of unconstrained sampling and inference without using Cussen's algorithms
    contains a very simple sampling implementation using inference we came up with
* v2-inference-standard.pl - exact inference from Cussen's paper without the sharing optimizations
* slp.pl - final and most relevant version,
    exact inference (marginal and success-constrained) with sharing optimizations
    + sampling (unconstrained loglinear and success-constrained backtrackable model) from Cussen's paper

known shortcomings
---
* twice repeated output of P=1 for inference_SC_test(dq(a),P) --> too many choice points left
* sample_SC insufficiently binds outputs when denom gets recalculated
* sample_SC has spurious backtracking in denom recalculation case
    ?- sample_SC((s(X,Y), r(Z,W))).
        Z = a,
        W = b .

a note on repeated success-constrained sampling with our backtrackable model implementation
---
unfortunately, for bodies that aren't pure 'fail', sample_SC cannot just assert / retract at will.
rewriting the probability tree like that doesn't work out, as other queries that might get issued
afterwards won't be correct. in the worst case, it is only correct for sampling a goal once.
a solution for this is to only change the probabilities locally and pass the entire subtree as
an argument to all recursive calls.
